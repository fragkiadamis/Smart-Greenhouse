[
    {
        "id": "1462e9f7eda7bef5",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bf766c65.ba9fe",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ceba7b56.d491d",
        "type": "ui_group",
        "name": "Main",
        "tab": "c20da880ba34fe76",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5cb23cc0.d98684",
        "type": "ui_tab",
        "name": "Log",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0fed7531558c5727",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ad42d9a86a124816",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "SmartGreenHouseDB",
        "name": "SmartGreenHouseDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "e8ee0bf9.1711f8",
        "type": "mqtt-broker",
        "z": "1462e9f7eda7bef5",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "usetls": false,
        "verifyservercert": true,
        "compatmode": true,
        "keepalive": "15",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "f99f749f679c209a",
        "type": "ui_group",
        "name": "Main",
        "tab": "5cb23cc0.d98684",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c20da880ba34fe76",
        "type": "ui_tab",
        "name": "Actuators",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2bca66d51e25777e",
        "type": "ui_tab",
        "name": "Sensors",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ddfd110c3a0fdb51",
        "type": "ui_group",
        "name": "Main",
        "tab": "2bca66d51e25777e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ed3b852c3c988bd6",
        "type": "aedes broker",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 830,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7cd028cc46f917db",
        "type": "mqtt out",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/mode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bf766c65.ba9fe",
        "x": 970,
        "y": 360,
        "wires": []
    },
    {
        "id": "2cf99d88af608807",
        "type": "ui_switch",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "label": "Mode",
        "tooltip": "",
        "group": "ceba7b56.d491d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 710,
        "y": 360,
        "wires": [
            [
                "7cd028cc46f917db"
            ]
        ]
    },
    {
        "id": "968795bb0f469613",
        "type": "mqtt out",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/ac_temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bf766c65.ba9fe",
        "x": 980,
        "y": 440,
        "wires": []
    },
    {
        "id": "84ace75468cb6913",
        "type": "mqtt out",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/irrigation",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bf766c65.ba9fe",
        "x": 980,
        "y": 600,
        "wires": []
    },
    {
        "id": "71578d5554839887",
        "type": "ui_switch",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "label": "Irrigation",
        "tooltip": "",
        "group": "ceba7b56.d491d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 720,
        "y": 600,
        "wires": [
            [
                "84ace75468cb6913"
            ]
        ]
    },
    {
        "id": "e53973ee5e8ca397",
        "type": "ui_multistate_switch",
        "z": "1462e9f7eda7bef5",
        "name": "Humidity Control",
        "group": "ceba7b56.d491d",
        "order": 0,
        "width": 0,
        "height": 1,
        "label": "Humidity Control",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": false,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "multilineLabel": true,
        "passThrough": "never",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Humidifier",
                "value": "hum",
                "valueType": "str",
                "color": "#009933"
            },
            {
                "label": "Off",
                "value": "hum_ctrl_off",
                "valueType": "str",
                "color": "#ff6666"
            },
            {
                "label": "Dehumidifier",
                "value": "dehum",
                "valueType": "str",
                "color": "#999999"
            }
        ],
        "topic": "",
        "x": 700,
        "y": 520,
        "wires": [
            [
                "03ff199d1e88e0c9"
            ]
        ]
    },
    {
        "id": "0d4927961bd29f3f",
        "type": "ui_multistate_switch",
        "z": "1462e9f7eda7bef5",
        "name": "Temperature Control",
        "group": "ceba7b56.d491d",
        "order": 1,
        "width": 0,
        "height": 1,
        "label": "Temperature Control",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": false,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "multilineLabel": true,
        "passThrough": "never",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Cooling",
                "value": "cool",
                "valueType": "str",
                "color": "#009933"
            },
            {
                "label": "Off",
                "value": "temp_ctrl_off",
                "valueType": "str",
                "color": "#999999"
            },
            {
                "label": "Heating",
                "value": "heat",
                "valueType": "str",
                "color": "#ff6666"
            }
        ],
        "topic": "",
        "x": 680,
        "y": 440,
        "wires": [
            [
                "968795bb0f469613"
            ]
        ]
    },
    {
        "id": "03ff199d1e88e0c9",
        "type": "mqtt out",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/ac_hum",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bf766c65.ba9fe",
        "x": 980,
        "y": 520,
        "wires": []
    },
    {
        "id": "caed800a9629582a",
        "type": "ui_multistate_switch",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "group": "ceba7b56.d491d",
        "order": 0,
        "width": 0,
        "height": 1,
        "label": "Window Shutter",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": true,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "never",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Close",
                "value": "close",
                "valueType": "str",
                "color": "#009933"
            },
            {
                "label": "Middle",
                "value": "mid",
                "valueType": "str",
                "color": "#999999"
            },
            {
                "label": "Open",
                "value": "open",
                "valueType": "str",
                "color": "#ff6666"
            }
        ],
        "topic": "",
        "x": 700,
        "y": 680,
        "wires": [
            [
                "d7866db1821036d9"
            ]
        ]
    },
    {
        "id": "d7866db1821036d9",
        "type": "mqtt out",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/shutter",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bf766c65.ba9fe",
        "x": 980,
        "y": 680,
        "wires": []
    },
    {
        "id": "c8ff3d3e0a061bbc",
        "type": "mqtt in",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "bf766c65.ba9fe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 730,
        "y": 760,
        "wires": [
            [
                "a1da6df01b073c21"
            ]
        ]
    },
    {
        "id": "9dcd7a9828cd05bf",
        "type": "mqtt in",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/lum_ratio",
        "qos": "2",
        "datatype": "auto",
        "broker": "bf766c65.ba9fe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 720,
        "y": 840,
        "wires": [
            [
                "064bb612670706ab"
            ]
        ]
    },
    {
        "id": "09a5875eaf51805f",
        "type": "mqtt in",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/log",
        "qos": "2",
        "datatype": "auto",
        "broker": "bf766c65.ba9fe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "cf0c4ac9c116a59d",
                "f285f38f41cd4a4f"
            ]
        ]
    },
    {
        "id": "a1da6df01b073c21",
        "type": "function",
        "z": "1462e9f7eda7bef5",
        "name": "MQTT to InfluxDB temperature",
        "func": "// Get payload\nlet payload = msg.payload;\n\n// Extract temperatures\nlet temperatures = payload.split(\"|\");\nlet internal = parseFloat(temperatures[0]);\nlet external = parseFloat(temperatures[1]);\n\nmsg.payload = {internal, external};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 760,
        "wires": [
            [
                "9d8dce9a71e8b0c9"
            ]
        ]
    },
    {
        "id": "9d8dce9a71e8b0c9",
        "type": "influxdb out",
        "z": "1462e9f7eda7bef5",
        "influxdb": "ad42d9a86a124816",
        "name": "",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1460,
        "y": 760,
        "wires": []
    },
    {
        "id": "064bb612670706ab",
        "type": "function",
        "z": "1462e9f7eda7bef5",
        "name": "MQTT to InfluxDB luminosity_ratio",
        "func": "// Get payload\nmsg.payload = parseFloat(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 840,
        "wires": [
            [
                "ee4ed1f9a709320d"
            ]
        ]
    },
    {
        "id": "ee4ed1f9a709320d",
        "type": "influxdb out",
        "z": "1462e9f7eda7bef5",
        "influxdb": "ad42d9a86a124816",
        "name": "",
        "measurement": "luminosity_ratio",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1470,
        "y": 840,
        "wires": []
    },
    {
        "id": "5dc2f957e10142fc",
        "type": "mqtt in",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "topic": "esp32/hum",
        "qos": "2",
        "datatype": "auto",
        "broker": "bf766c65.ba9fe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 720,
        "y": 920,
        "wires": [
            [
                "13a8e34f4cb504a4"
            ]
        ]
    },
    {
        "id": "13a8e34f4cb504a4",
        "type": "function",
        "z": "1462e9f7eda7bef5",
        "name": "MQTT to InfluxDB humidity",
        "func": "// Get payload\nmsg.payload = parseFloat(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 920,
        "wires": [
            [
                "cc1f858ccb69636e"
            ]
        ]
    },
    {
        "id": "cc1f858ccb69636e",
        "type": "influxdb out",
        "z": "1462e9f7eda7bef5",
        "influxdb": "ad42d9a86a124816",
        "name": "",
        "measurement": "humidity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1450,
        "y": 920,
        "wires": []
    },
    {
        "id": "cf0c4ac9c116a59d",
        "type": "influxdb out",
        "z": "1462e9f7eda7bef5",
        "influxdb": "ad42d9a86a124816",
        "name": "",
        "measurement": "log",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f285f38f41cd4a4f",
        "type": "influxdb in",
        "z": "1462e9f7eda7bef5",
        "influxdb": "ad42d9a86a124816",
        "name": "",
        "query": "SELECT * FROM log GROUP BY * ORDER BY DESC LIMIT 10",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 960,
        "y": 1100,
        "wires": [
            [
                "332906b4ff9ae3b7"
            ]
        ]
    },
    {
        "id": "332906b4ff9ae3b7",
        "type": "function",
        "z": "1462e9f7eda7bef5",
        "name": "",
        "func": "let payload = msg.payload;\nlet data = [];\n\nmsg.payload.forEach(event => {\n    let dt = new Date(event.time);\n    data.push(`${dt.getDate()}/${dt.getMonth() + 1}/${dt.getFullYear()} ${dt.getHours()}:${dt.getMinutes()} ${event.value}`);\n});\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1100,
        "wires": [
            [
                "4c00977b6d8448ce"
            ]
        ]
    },
    {
        "id": "4c00977b6d8448ce",
        "type": "ui_template",
        "z": "1462e9f7eda7bef5",
        "group": "f99f749f679c209a",
        "name": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1400,
        "y": 1100,
        "wires": [
            []
        ]
    }
]